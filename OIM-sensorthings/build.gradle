plugins {
	id "org.asciidoctor.convert" version "1.5.9.2"
	id 'war'
}

war {
	enabled = true
}

dependencies {
	implementation project(':OIM-common')

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'

	implementation 'org.geotools:gt-referencing:22.2'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.12'

	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'

    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
	implementation 'de.fraunhofer.iosb.ilt:FROST-Client:0.34'
	implementation 'com.opencsv:opencsv:5.3'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
	ignoreFailures = true
	exclude '**/*'
}

task wrapper(type: Wrapper) {
	gradleVersion = '6.5'
}
