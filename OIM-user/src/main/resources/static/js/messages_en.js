var JS_MESSAGE = {};
JS_MESSAGE["common.filename"] = "FileName";
JS_MESSAGE["usersession.grant.invalid"] = "You do not have permission to use.";
JS_MESSAGE["upload"] = "Uploading.";
JS_MESSAGE["user.id.enable"] = "The ID is available.";
JS_MESSAGE["data.group.statistics.summary"] = "Status By Data Sharing Type";
JS_MESSAGE["user.session.notexist"] = "There is no session information.";
JS_MESSAGE["common.private"] = "Private";
JS_MESSAGE["iot.dust.cai"] = "Comprehensive Air-quality Index(CAI)";
JS_MESSAGE["data.file.save"] = "Save file";
JS_MESSAGE["converter.data.group"] = "Data Group Name";
JS_MESSAGE["simulation.select.location"] = "Please specify the location.";
JS_MESSAGE["common.address"] = "Address";
JS_MESSAGE["common.search"] = "Search";
JS_MESSAGE["data.name.empty"] = "Please enter the data name.";
JS_MESSAGE["common.height.reference.clamp"] = "Clamp To Ground";
JS_MESSAGE["data.select"] = "Please select a data.";
JS_MESSAGE["converter.title"] = "Title";
JS_MESSAGE["data.adjust.log.not.registered"] = "Unregistered";
JS_MESSAGE["user.password.lower.invalid"] = "The number of lowercase letters is inappropriate for the password policy.";
JS_MESSAGE["converter.f4d.all"] = "F4D batch conversion";
JS_MESSAGE["data.converter.status.exception"] = "An error occurred while updating the conversion status.";
JS_MESSAGE["search.input.data.address"] = "please input address.";
JS_MESSAGE["password.change.next"] = "The next time you change, you will be returned to the login page and the service will be unavailable. Would you like to change your password next time?";
JS_MESSAGE["data.attribute.insert"] = "Batch attributes registration";
JS_MESSAGE["issue.title.empty"] = "Please enter an issue title.";
JS_MESSAGE["common.unused"] = "Unused";
JS_MESSAGE["signin.id.placeholder"] = "Id";
JS_MESSAGE["spatial.target.position"] = "Target Position";
JS_MESSAGE["data.list.tab.menu"] = "Data List";
JS_MESSAGE["spatial.raster.high.low.points"] = "Raster High/Low Points Analysis";
JS_MESSAGE["common.cancel"] = "Cancel";
JS_MESSAGE["iot.occupancy.person"] = "People";
JS_MESSAGE["error.page.title"] = "Error | OPEN INDOOR MAP";
JS_MESSAGE["check.group.required"] = "Please select a group.";
JS_MESSAGE["password.empty"] = "Please enter a password.";
JS_MESSAGE["converter.target.file.empty"] = "The 3D file to be converted does not exist.";
JS_MESSAGE["search.order"] = "Display order";
JS_MESSAGE["common.down"] = "Down";
JS_MESSAGE["metainfo.empty"] = "Enter the meta information.";
JS_MESSAGE["converter.file.count"] = "File Count";
JS_MESSAGE["converter.data.group.available"] = "Available";
JS_MESSAGE["common.list"] = "List";
JS_MESSAGE["common.map"] = "Map";
JS_MESSAGE["policy.camera.location"] = "Move the camera closer to the ground.";
JS_MESSAGE["spatial.map.extent"] = "Map Extent";
JS_MESSAGE["iot.dust.grade"] = "Grade(CAI)";
JS_MESSAGE["converter.job.file.list.tab.menu"] = "Conversion Detail Log List";
JS_MESSAGE["spatial.area.type"] = "Area Type";
JS_MESSAGE["search.date.warning"] = "Starting date should earler than ending date.";
JS_MESSAGE["usersession.password.invalid"] = "Password does not match";
JS_MESSAGE["common.move.mode"] = "Move Mode";
JS_MESSAGE["data.group.select.top"] = "Select by the top most data group";
JS_MESSAGE["search.input.data.name"] = "Please input data name.";
JS_MESSAGE["user.id.min_length.invalid"] = "User ID length is too short.";
JS_MESSAGE["data.group.edit.page.title"] = "Data Group Edit | OPEN INDOOR MAP";
JS_MESSAGE["data.adjust.log.page.title"] = "Request to update data geometry | OPEN INDOOR MAP";
JS_MESSAGE["total.few"] = "";
JS_MESSAGE["data.all.insert"] = "Batch registration(File)";
JS_MESSAGE["data.group.dialog.summary"] = "Data Group Dialog";
JS_MESSAGE["common.search.include"] = "Include(Like)";
JS_MESSAGE["move.confirm"] = "Do you want to move to the next?";
JS_MESSAGE["data.name.invalid"] = "Data name is invalid.";
JS_MESSAGE["iot.occupancy.legend"] = "Indoor Legend";
JS_MESSAGE["toolbar.initialize.direction"] = "Initialize direction";
JS_MESSAGE["common.unfold"] = "Unfolding";
JS_MESSAGE["error.message"] = "An error occurred on the page you requested.";
JS_MESSAGE["signin.password.title"] = "Password";
JS_MESSAGE["data.object.attribute.information"] = "Object attribute information";
JS_MESSAGE["data.info.incorrect"] = "Object information is incorrect. Please check.";
JS_MESSAGE["toolbar.close.range.issues"] = "Issues around location";
JS_MESSAGE["data.key"] = "Data Key";
JS_MESSAGE["data.group.search.placeholder"] = "Please enter a group name";
JS_MESSAGE["common.basic"] = "Basic";
JS_MESSAGE["iot.dust.legend.good"] = "Good";
JS_MESSAGE["toolbar.distance"] = "Distance";
JS_MESSAGE["search.include"] = "Including";
JS_MESSAGE["data.group.list.tab.menu"] = "Data Group";
JS_MESSAGE["upload.file.invalid"] = "The file is not valid. Please upload again.";
JS_MESSAGE["common.id"] = "Id";
JS_MESSAGE["map.find.point.page.title"] = "Find on the map | OPEN INDOOR MAP";
JS_MESSAGE["common.altitude"] = "Altitude";
JS_MESSAGE["representative.latitude.empty"] = "Enter the representative location (latitude).";
JS_MESSAGE["map.control.setting"] = "Setting";
JS_MESSAGE["csrf.token.invalid"] = "Security(CSRF) token is invalid.";
JS_MESSAGE["usersession.status.invalid"] = "Please check the user status with the administrator";
JS_MESSAGE["upload.data.list.tab.menu"] = "Uploading Data List";
JS_MESSAGE["data.adjust.log.location"] = "Longitude/Latitude/Altitude";
JS_MESSAGE["search.stop.use"] = "Unuse(admin)";
JS_MESSAGE["db.exception"] = "Error is occured in DB. Please use after for a while.";
JS_MESSAGE["iot.dust.metric.value"] = "Metric Density";
JS_MESSAGE["iot.occupancy.grade"] = "Grade";
JS_MESSAGE["success"] = "It has been succeeded.";
JS_MESSAGE["iot.dust.station.does.not.exist"] = "The station dose not exist.";
JS_MESSAGE["searching"] = "Searching.";
JS_MESSAGE["user.info.update"] = "Updated User Information.";
JS_MESSAGE["data.type.colon"] = "Type";
JS_MESSAGE["common.select.mode"] = "Select Mode";
JS_MESSAGE["data.group.select.parent"] = "Select Parent Data Group";
JS_MESSAGE["common.select.all"] = "Select All";
JS_MESSAGE["common.end"] = "End";
JS_MESSAGE["common.sir"] = "";
JS_MESSAGE["data.group.input.page.title"] = "Data Group Registration | OPEN INDOOR MAP";
JS_MESSAGE["data.set.height"] = "How to set the height";
JS_MESSAGE["data.group.target"] = "Data Target";
JS_MESSAGE["converter.error.code.empty"] = "None";
JS_MESSAGE["toolbar.mago3d.settings"] = "mago3D settings";
JS_MESSAGE["common.attachments"] = "Attachments";
JS_MESSAGE["error.code"] = "Error Code:";
JS_MESSAGE["iot.occupancy.floor"] = "Floor";
JS_MESSAGE["data.object.attribute.dialog.summary"] = "Data object attribute dialog";
JS_MESSAGE["converter.status"] = "Status";
JS_MESSAGE["toolbar.slide"] = "Slide";
JS_MESSAGE["user.en.upper.char"] = "Uppercase Characters";
JS_MESSAGE["iot.occupancy.legend.good"] = "Good";
JS_MESSAGE["search.ascending"] = "ASC";
JS_MESSAGE["session.required"] = "Available after sign in.";
JS_MESSAGE["user.required.char"] = "More than required.";
JS_MESSAGE["layer.not.supported"] = "type is not supported.";
JS_MESSAGE["signin.password.placeholder"] = "Password";
JS_MESSAGE["data.not.loaded"] = "Data not yet loaded. Please try again after moving.";
JS_MESSAGE["upload.target.file.count.compare.all"] = "3D File/All File";
JS_MESSAGE["upload.complete"] = "Uploading is complete.";
JS_MESSAGE["spatial.high"] = "High";
JS_MESSAGE["converter.subtitle"] = "Automatic Conversion Of 3D Uploading Data";
JS_MESSAGE["upload.z.axis.facing"] = "When the Z axis is facing the ceiling of the building";
JS_MESSAGE["converter.usf.empty"] = "Enter the Unit Scale Factor.";
JS_MESSAGE["data.administrator"] = "Administrator";
JS_MESSAGE["search.what.count"] = "Count";
JS_MESSAGE["issue.details"] = "Issue Details";
JS_MESSAGE["iot.occupancy"] = "Occupancy";
JS_MESSAGE["common.update"] = "Update";
JS_MESSAGE["io.exception"] = "Error is occured under input/output. Please use after for a while.";
JS_MESSAGE["search.date"] = "Date";
JS_MESSAGE["data.update.check"] = "Do you want to save the currently entered position and rotation information into DB?";
JS_MESSAGE["common.not.registered"] = "Unregistered";
JS_MESSAGE["data.not.select"] = "There is no data selected.";
JS_MESSAGE["converter.conversion.type"] = "Conversion Type";
JS_MESSAGE["common.longitude"] = "Longitude";
JS_MESSAGE["data.adjust.log.owner.id"] = "Owner ID";
JS_MESSAGE["map.control.measure"] = "Measurement";
JS_MESSAGE["issue.content.empty"] = "Please enter the content of the issue.";
JS_MESSAGE["common.pick.location"] = "Pick location";
JS_MESSAGE["upload.file.ext.invalid"] = "The file extension is not valid.";
JS_MESSAGE["loading"] = "Loading";
JS_MESSAGE["common.public"] = "Public";
JS_MESSAGE["spatial.extent.info"] = "- When selecting a map area, the map is switched to 2D mode.";
JS_MESSAGE["common.save"] = "Save";
JS_MESSAGE["search.input.placeholder"] = "Enter search term";
JS_MESSAGE["user.session.close"] = "Do you want the selected session of the user  to be closed?";
JS_MESSAGE["common.option"] = "Option";
JS_MESSAGE["user.en.lower.char"] = "Lowercase Characters";
JS_MESSAGE["data.log.change.history.does.not.exist"] = "Data update history does not exist.";
JS_MESSAGE["not.use"] = "Unuse";
JS_MESSAGE["search.administrative.district"] = "Administrative district";
JS_MESSAGE["server"] = "Server";
JS_MESSAGE["common.count.unit"] = "Unit";
JS_MESSAGE["data.status.colon"] = "Status";
JS_MESSAGE["save"] = "It has been saved.";
JS_MESSAGE["user.password.invalid"] = "The password is not proper for password policy.";
JS_MESSAGE["data.group.key.duplication"] = "The data group key is in use. Please enter a different name.";
JS_MESSAGE["user.modify.password.page.title"] = "Password Change | OPEN INDOOR MAP";
JS_MESSAGE["converter.status.partial_success"] = "Partial Success";
JS_MESSAGE["converter.detail.error.code"] = "View";
JS_MESSAGE["common.data.type"] = "Data Type";
JS_MESSAGE["iot.occupancy.floor.info"] = "Floor Info";
JS_MESSAGE["iot.dust.legend.very-bad"] = "Very Bad";
JS_MESSAGE["converter.job.z.axis.facing"] = "When the Z axis is facing the ceiling of the building";
JS_MESSAGE["common.lookup"] = "Lookup";
JS_MESSAGE["data.group.name.colon"] = "Group Name";
JS_MESSAGE["common.file.upload"] = "File Upload";
JS_MESSAGE["spatial.observer.offset"] = "Observer Offset (m)";
JS_MESSAGE["data.group.cannot.change.order"] = "You can not change the order.";
JS_MESSAGE["common.asc"] = "Asc";
JS_MESSAGE["change"] = "It has been changed.";
JS_MESSAGE["converter.usf.unit10m"] = "10 m";
JS_MESSAGE["user.name.empty"] = "Please enter a name.";
JS_MESSAGE["toolbar.bounding.box"] = "Bounding box";
JS_MESSAGE["search.intergrated"] = "Search";
JS_MESSAGE["search.administrative.emd"] = "Street";
JS_MESSAGE["common.created"] = "Created";
JS_MESSAGE["data.group.find.map"] = "Find On The Map";
JS_MESSAGE["common.select"] = "Select";
JS_MESSAGE["map.control.distance"] = "Distance";
JS_MESSAGE["common.back"] = "Backward";
JS_MESSAGE["policy.init.fov"] = "Angle";
JS_MESSAGE["use"] = "In use";
JS_MESSAGE["representative.longitude.empty"] = "Enter the representative location (longitude).";
JS_MESSAGE["simulation.construction.process"] = "Construction Process";
JS_MESSAGE["toolbar.rotate.camera.right"] = "Rotate camera right";
JS_MESSAGE["data.attribute.dialog.caption"] = "Data attribute dialog";
JS_MESSAGE["data.smart.tiling.grant.required"] = "Change permission (Smart Tiling) does not exist.";
JS_MESSAGE["map.control.area"] = "Area";
JS_MESSAGE["common.use"] = "Used";
JS_MESSAGE["common.korea"] = "Korean";
JS_MESSAGE["common.origin"] = "Origin";
JS_MESSAGE["data.group.key.constraint"] = "alphabet,Number,-,_";
JS_MESSAGE["file.name.empty"] = "Please input a filename.";
JS_MESSAGE["search.insert.type"] = "Registration type";
JS_MESSAGE["search.status"] = "Status";
JS_MESSAGE["delete.confirm"] = "Are you sure delete it?";
JS_MESSAGE["common.ten.count"] = "10 each";
JS_MESSAGE["iot.dust.station.addr"] = "Address";
JS_MESSAGE["common.all"] = "All";
JS_MESSAGE["common.fifty.count"] = "50 each";
JS_MESSAGE["spatial.user.area"] = "User Area";
JS_MESSAGE["upload.las.file.constraint"] = "For LAS data, select the conversion template as Point Cloud.";
JS_MESSAGE["map.control.location"] = "Location inquiry";
JS_MESSAGE["spatial.sides"] = "Sides (number)";
JS_MESSAGE["spatial.raster.profile"] = "Raster Profile Analysis";
JS_MESSAGE["data.all.delete"] = "Batch deletion";
JS_MESSAGE["common.find.map"] = "Find On The Map";
JS_MESSAGE["converter.view.y.axis"] = "Y Axis";
JS_MESSAGE["converter.error.information"] = "Error Information";
JS_MESSAGE["data.group.depth.constraint"] = "User data groups cannot be entered into hierarchies of 3 Depth or higher.";
JS_MESSAGE["common.folding"] = "Folding";
JS_MESSAGE["search.in.use"] = "In use";
JS_MESSAGE["upload.data.input.page.title"] = "Uploading Data | OPEN INDOOR MAP";
JS_MESSAGE["map.control.fixed"] = "Fixed point";
JS_MESSAGE["converter.status.success"] = "Success";
JS_MESSAGE["common.latitude"] = "Latitude";
JS_MESSAGE["user.password.special.invalid"] = "The number of special characters is inappropriate for the password policy.";
JS_MESSAGE["common.check"] = "* mark is required";
JS_MESSAGE["data.group.key.invalid"] = "Data group key is incorrect.(only alphabet)";
JS_MESSAGE["common.filter.more"] = "More Filters";
JS_MESSAGE["toolbar.change.rotation"] = "Change rotation";
JS_MESSAGE["user.session.empty"] = "Service is available after login.";
JS_MESSAGE["search.delete"] = "Delete(화면 비표시)";
JS_MESSAGE["common.count"] = "Count";
JS_MESSAGE["search.descending.order"] = "DESC";
JS_MESSAGE["user.password.compare.invalid"] = "The existing password does not match.";
JS_MESSAGE["toolbar.select.and.move"] = "Select & Move";
JS_MESSAGE["search.district.move"] = "Move district";
JS_MESSAGE["common.password"] = "Password";
JS_MESSAGE["data.group.map.caption"] = "Data Group List";
JS_MESSAGE["map.control.split"] = "Split screen";
JS_MESSAGE["search.same"] = "Same";
JS_MESSAGE["map.find.data.point.page.title"] = "Find on the map | OPEN INDOOR MAP";
JS_MESSAGE["converter.error.code"] = "Error Code";
JS_MESSAGE["common.f4d.converter"] = "F4D Conversion";
JS_MESSAGE["iot.occupancy.legend.normal"] = "Normal";
JS_MESSAGE["spatial.user.line"] = "User Line";
JS_MESSAGE["common.mapping.type"] = "Mapping Type";
JS_MESSAGE["delete"] = "It has been deleted.";
JS_MESSAGE["converter.template.extra.big.building"] = "mega Building";
JS_MESSAGE["use.id.other.id.select"] = "The ID is in use. Please input another ID.";
JS_MESSAGE["converter.status.waiting"] = "Wait For Approval";
JS_MESSAGE["search.option.warning"] = "If you use including option, it could take more 1 minutes. Do you want to continue?";
JS_MESSAGE["usersession.role.invalid"] = "You are not authorized";
JS_MESSAGE["search.fifty.count"] = "50";
JS_MESSAGE["data.adjust.log.heading.pitch.roll"] = "heading/pitch/roll";
JS_MESSAGE["search.etc"] = "etc";
JS_MESSAGE["user.password.digit.invalid"] = "The number is not suitable for password policy.";
JS_MESSAGE["data.log.list.page.title"] = "Data Update History | OPEN INDOOR MAP";
JS_MESSAGE["common.height.reference.none"] = "None";
JS_MESSAGE["layer.init"] = "Create it via New.";
JS_MESSAGE["data.sharing.colon"] = "Sharing Type";
JS_MESSAGE["already.agreed"] = "You are already agreed.";
JS_MESSAGE["common.data.name"] = "Data Name";
JS_MESSAGE["common.hide"] = "Hide";
JS_MESSAGE["data.page.title"] = "Data List(Map) | OPEN INDOOR MAP";
JS_MESSAGE["user.password.length"] = "character";
JS_MESSAGE["common.strike.uploading"] = "Uploading...";
JS_MESSAGE["data.adjust.log.other.users"] = "Other users";
JS_MESSAGE["search.insert.date"] = "Registered date";
JS_MESSAGE["total.count"] = "Total:";
JS_MESSAGE["iot.occupancy.legend.nodata"] = "Nodata";
JS_MESSAGE["search.required.word"] = "Please enter at least 1 character for the search term.";
JS_MESSAGE["search.expires"] = "Expired(사용시간 종료)";
JS_MESSAGE["data.filter.initialization"] = "Filter initialization";
JS_MESSAGE["search.district.remove"] = "Remove district area";
JS_MESSAGE["data.transform.save.request"] = "Request transformation";
JS_MESSAGE["upload.converter"] = "Converter";
JS_MESSAGE["upload.converter.count"] = "Converting Count";
JS_MESSAGE["data.attribute.information"] = "Attribute information";
JS_MESSAGE["data.group.sharing"] = "Sharing type";
JS_MESSAGE["upload.data.input.tab.menu"] = "Uploading Data";
JS_MESSAGE["converter.job.f4d.conversion.caption"] = "F4D Converter Job Registration";
JS_MESSAGE["data.not.registered"] = "Not Registered";
JS_MESSAGE["data.log.list.tab.menu"] = "Data update History";
JS_MESSAGE["search.no.results"] = "No search results.";
JS_MESSAGE["data.status.processing"] = "Conversioning";
JS_MESSAGE["simulation.solar.analysis"] = "Solar Analysis";
JS_MESSAGE["usersession.lastsignin.invalid"] = "Expired since the last access time";
JS_MESSAGE["simulation.analysis.start"] = "Please select a location after starting analysis.";
JS_MESSAGE["search.district.select"] = "Select district";
JS_MESSAGE["signin.id.title"] = "ID";
JS_MESSAGE["search.dormancy"] = "Dormancy(사인인 시간)";
JS_MESSAGE["user.id.empty"] = "Please enter the ID.";
JS_MESSAGE["search.ten.count"] = "10";
JS_MESSAGE["iot.dust.legend.bad"] = "Bad";
JS_MESSAGE["data.status.delete"] = "Delete";
JS_MESSAGE["common.up"] = "Up";
JS_MESSAGE["converter.usf.basic"] = "Basic(1m)";
JS_MESSAGE["common.analysis"] = "Analysis";
JS_MESSAGE["data.group.name"] = "Data Group Name";
JS_MESSAGE["data.group.parent"] = "Parent Data Group";
JS_MESSAGE["password.correct.empty"] = "Please enter a password confirmation.";
JS_MESSAGE["common.page"] = "Page";
JS_MESSAGE["data.group.list.page.title"] = "Data Group | OPEN INDOOR MAP";
JS_MESSAGE["data.list.page.caption"] = "Data list table";
JS_MESSAGE["user.password.confirm"] = "Confirm Password";
JS_MESSAGE["common.search.word"] = "Search Word";
JS_MESSAGE["iot.dust.legend.normal"] = "Normal";
JS_MESSAGE["common.turn.on"] = "Turn On";
JS_MESSAGE["toolbar.area"] = "Area";
JS_MESSAGE["common.order"] = "Order";
JS_MESSAGE["toolbar.change.location"] = "Change location";
JS_MESSAGE["data.attribute"] = "Attribute";
JS_MESSAGE["data.insert"] = "Data is registered";
JS_MESSAGE["data.does.not.exist"] = "The data does not exist";
JS_MESSAGE["search.page"] = "page";
JS_MESSAGE["requested"] = "Requested";
JS_MESSAGE["common.revert"] = "Revert";
JS_MESSAGE["common.desc"] = "Desc";
JS_MESSAGE["common.meta.information"] = "Meta Information";
JS_MESSAGE["ajax.error.message"] = "Please use after for a while. If same error is continued, contact the administrator.";
JS_MESSAGE["iot.occupancy.legend.range"] = "Range";
JS_MESSAGE["data.group.order.first"] = "It is the first time.";
JS_MESSAGE["converter.template.building"] = "Building";
JS_MESSAGE["common.confirm"] = "Confirm";
JS_MESSAGE["common.label"] = "Label";
JS_MESSAGE["converter.error.message"] = "Error Message";
JS_MESSAGE["common.description"] = "Description";
JS_MESSAGE["converter.data.group.does.not.exist"] = "Data Group Does Not Exist.";
JS_MESSAGE["data.log.change.type"] = "Update type";
JS_MESSAGE["usersession.failsignincount.invalid"] = "The number of sign-in failures has been exceeded";
JS_MESSAGE["data.update.request.check"] = "This data is uploaded by the administrator or uploaded by other users. Would you like to change the entered position and rotation information?";
JS_MESSAGE["issue.register"] = "Register the issue";
JS_MESSAGE["upload.representative.location"] = "Location(Lon/Lat/Alt)";
JS_MESSAGE["fileinfo.size.invalid"] = "File size exceeded";
JS_MESSAGE["data.group.search"] = "Data Group Search";
JS_MESSAGE["location.invalid"] = "The location information is incorrect. Please check.";
JS_MESSAGE["common.view"] = "View";
JS_MESSAGE["common.insert.date"] = "Registration date";
JS_MESSAGE["search.enter.word"] = "Please enter a search term.";
JS_MESSAGE["common.moving.time"] = "Moving Time";
JS_MESSAGE["data.status.etc"] = "Etc";
JS_MESSAGE["spatial.radial.line.of.sight"] = "Radial Line Of Sight Analysis";
JS_MESSAGE["iot.dust.legend"] = "Fine Dust Legend";
JS_MESSAGE["common.sharing"] = "Sharing";
JS_MESSAGE["common.data.group.name"] = "Data Group Name";
JS_MESSAGE["policy.init.position"] = "Start Position";
JS_MESSAGE["converter.template.point.cloud"] = "Point Cloud";
JS_MESSAGE["data.status.use"] = "Use";
JS_MESSAGE["spatial.threat.dome"] = "Threat Dome Analysis";
JS_MESSAGE["data.dialog.caption"] = "Data dialog";
JS_MESSAGE["data.group.dialog.caption"] = "Data Group Dialog";
JS_MESSAGE["signin.page.title"] = "Sign In | mago3D";
JS_MESSAGE["password.new"] = "Please enter a new password.";
JS_MESSAGE["common.duplication.check"] = "Check duplication";
JS_MESSAGE["user.number.char"] = "number";
JS_MESSAGE["user.password.current"] = "Current Password";
JS_MESSAGE["upload.file.count.constraint"] = "The maximum number of uploaded files is 500.";
JS_MESSAGE["common.step"] = "Step";
JS_MESSAGE["converter.job.f4d.registration"] = "F4D Converter Job Registration";
JS_MESSAGE["user.password.exception.char"] = "is a character that cannot be used as a password due to security vulnerability.";
JS_MESSAGE["map.control.home"] = "Home";
JS_MESSAGE["common.hundred.count"] = "100 each";
JS_MESSAGE["upload.list.page.caption"] = "Upload List";
JS_MESSAGE["file.ext.invalid"] = "File extension is not valid.";
JS_MESSAGE["common.delete"] = "Delete";
JS_MESSAGE["common.insert"] = "Insert";
JS_MESSAGE["Latitude"] = "effective range : -90 ~ 90";
JS_MESSAGE["spatial.value.type"] = "Value Type";
JS_MESSAGE["map.control.height"] = "Height";
JS_MESSAGE["simulation.landscape.analysis"] = "Landscape Analysis";
JS_MESSAGE["upload.file.initialization"] = "File Initialization";
JS_MESSAGE["common.edit"] = "Edit";
JS_MESSAGE["data.group.statistics.caption"] = "Status By Data Sharing Type";
JS_MESSAGE["search.administrative.sgg"] = "City/Town";
JS_MESSAGE["common.status"] = "Status";
JS_MESSAGE["data.map.caption"] = "Data list";
JS_MESSAGE["data.group.does.not.exist"] = "Data group does not exist.";
JS_MESSAGE["search.word"] = "Keyword";
JS_MESSAGE["search.lock.password"] = "Lock(비밀번호 실패횟수)";
JS_MESSAGE["converter.template.basic"] = "Basic";
JS_MESSAGE["policy.init.ssao"] = "Shadow Radius";
JS_MESSAGE["converter.usf.unit1mm"] = "1 mm";
JS_MESSAGE["common.position"] = "Position";
JS_MESSAGE["iot.dust.fine"] = "Dust";
JS_MESSAGE["search.admin.insert"] = "Register admin";
JS_MESSAGE["iot.dust.metric"] = "Metric";
JS_MESSAGE["update"] = "It has been updated.";
JS_MESSAGE["common.close"] = "Close";
JS_MESSAGE["user.id.notexist"] = "The ID is not exist.";
JS_MESSAGE["iot.occupancy.legend.bad"] = "Confusion";
JS_MESSAGE["upload.file.empty"] = "There is no file to upload.";
JS_MESSAGE["data.edit.page.title"] = "Edit Data | OPEN INDOOR MAP";
JS_MESSAGE["user.password.new"] = "New Password";
JS_MESSAGE["spatial.interval"] = "Interval (number)";
JS_MESSAGE["location.constraint"] = "Longitude effective range : -180 ~ 180";
JS_MESSAGE["converter.list.page.title"] = "Upload Data Conversion List | OPEN INDOOR MAP";
JS_MESSAGE["common.english"] = "English";
JS_MESSAGE["data.map.summary"] = "Data list";
JS_MESSAGE["toolbar.zoom.all"] = "Zoom all";
JS_MESSAGE["data.type.empty"] = "Please select a data type.";
JS_MESSAGE["converter.status.ready"] = "Ready";
JS_MESSAGE["spatial.radius"] = "Radius (m)";
JS_MESSAGE["apply"] = "Applied.";
JS_MESSAGE["more.information"] = "More Information";
JS_MESSAGE["common.updated"] = "Updated";
JS_MESSAGE["user.session.closed"] = "The session is closed.";
JS_MESSAGE["toolbar.change.color"] = "Change color";
JS_MESSAGE["toolbar.data.transform.save"] = "Save";
JS_MESSAGE["iot.dust.value"] = "Density";
JS_MESSAGE["user.password.change.next"] = "Change next";
JS_MESSAGE["data.upload.file"] = "Upload file";
JS_MESSAGE["data.object.attribute.dialog.caption"] = "Data object attribute dialog";
JS_MESSAGE["common.registered"] = "Registered";
JS_MESSAGE["converter.data.count"] = "Number Of Data";
JS_MESSAGE["data.group.select"] = "Select Data Group";
JS_MESSAGE["search.administrative.sdo"] = "State/Province";
JS_MESSAGE["user.id.duplication"] = "The ID is in use. Please enter another ID.";
JS_MESSAGE["password.match.current"] = "It matches the current password.";
JS_MESSAGE["search.input.data.group.name"] = "Please input group name.";
JS_MESSAGE["data.enter.data.name"] = "Please enter the data name";
JS_MESSAGE["data.group.key"] = "Data Group Key";
JS_MESSAGE["upload.y.axis.facing"] = "When the Y axis is facing the ceiling of the building";
JS_MESSAGE["common.object.attribute"] = "Object Attribute";
JS_MESSAGE["data.dialog.summary"] = "Data dialog";
JS_MESSAGE["upload.file.size.exceed"] = "File size is too large to upload.";
JS_MESSAGE["upload.list.page.summary"] = "Upload List Table";
JS_MESSAGE["converter.job.f4d.conversion.summary"] = "F4D Converter Job Registration";
JS_MESSAGE["data.adjust.log.registered"] = "Registered";
JS_MESSAGE["spatial.analysis.data"] = "Analysis Data";
JS_MESSAGE["cache.reloaded"] = "Updated cache.";
JS_MESSAGE["converter.usf"] = "U.S.F";
JS_MESSAGE["toolbar.initialize.location"] = "Initialize location";
JS_MESSAGE["data.list.tab.group"] = "Data Group";
JS_MESSAGE["upload.browser.guide"] = "Sorry. Please use it after updating to the latest browser.";
JS_MESSAGE["data.group.key.duplication.check"] = "Data group key duplication check is required.";
JS_MESSAGE["here.it.is"] = "Here it is";
JS_MESSAGE["converter.title.empty"] = "Please enter a title.";
JS_MESSAGE["data.attribute.dialog.summary"] = "Data attribute dialog";
JS_MESSAGE["converter.job.does.not.exist"] = "Converter Job does not exist.";
JS_MESSAGE["number.constraint"] = "Only numbers can be entered.";
JS_MESSAGE["common.api.document"] = "API Specification";
JS_MESSAGE["user.password.change"] = "Change";
JS_MESSAGE["common.bounding.box"] = "Bounding Box";
JS_MESSAGE["data.object.attribute.insert"] = "Batch attributes of Object registration";
JS_MESSAGE["field.required"] = "nessasery field";
JS_MESSAGE["common.common"] = "Common";
JS_MESSAGE["data.insert.date"] = "Registerd date";
JS_MESSAGE["common.forward"] = "Forward";
JS_MESSAGE["iot.dust.station.name"] = "Station Name";
JS_MESSAGE["data.group.name.input"] = "Enter Group Name";
JS_MESSAGE["iot.dust.sensor.info.does.not.exist"] = "The sensor information dose not exist.";
JS_MESSAGE["data.lock.release"] = "Unlocked";
JS_MESSAGE["toolbar.zoom.out"] = "Zoom out";
JS_MESSAGE["common.data"] = "Data";
JS_MESSAGE["data.log.requester"] = "Requester";
JS_MESSAGE["user.special.char"] = "Special Characters";
JS_MESSAGE["converter.data.group.key"] = "Data Group Key";
JS_MESSAGE["common.height.reference"] = "Height Reference";
JS_MESSAGE["iot.occupancy.legend.very-bad"] = "Very Confusion";
JS_MESSAGE["common.turn.off"] = "Turn Off";
JS_MESSAGE["common.cannot.be.deleted"] = "Impossible(Default)";
JS_MESSAGE["data.list.page.title"] = "Data List | OPEN INDOOR MAP";
JS_MESSAGE["data.log.change.date"] = "Update Date";
JS_MESSAGE["search.signin.date"] = "Login date";
JS_MESSAGE["upload.guide"] = "Upload or click the file to upload";
JS_MESSAGE["representative.altitude.empty"] = "Enter the representative location (altitude).";
JS_MESSAGE["data.group.input.tab.menu"] = "Data Group Registration";
JS_MESSAGE["iot.dust"] = "Fine Dust";
JS_MESSAGE["common.search.same"] = "Same";
JS_MESSAGE["data.lock"] = "Locked";
JS_MESSAGE["data.group.key.empty"] = "Please enter the data group key. (only alphabet)";
JS_MESSAGE["common.attribute"] = "Attribute";
JS_MESSAGE["iot.occupancy.average.people"] = "Average number of people";
JS_MESSAGE["toolbar.shadow"] = "Shadow";
JS_MESSAGE["converter.status.fail"] = "Fail";
JS_MESSAGE["user.password.exception"] = "An error occurred during password conversion.";
JS_MESSAGE["common.owner"] = "owner";
JS_MESSAGE["data.longitude.empty"] = "Please enter longitude.";
JS_MESSAGE["data.object.does.not.exist"] = "The object does not exist";
JS_MESSAGE["common.color"] = "Color";
JS_MESSAGE["common.date"] = "Date";
JS_MESSAGE["toolbar.issue.registration"] = "Issue registration";
JS_MESSAGE["data.list.page.summary"] = "Data list tTable";
JS_MESSAGE["file.name.invalid"] = "Filename is not valid.";
JS_MESSAGE["policy.init.duration"] = "Speed";
JS_MESSAGE["common.move"] = "Move";
JS_MESSAGE["upload.data.edit.page.title"] = "Uploading Data Edit | OPEN INDOOR MAP";
JS_MESSAGE["upload.file.select.empty"] = "Please select a file.";
JS_MESSAGE["search.basic"] = "Basic";
JS_MESSAGE["common.title"] = "Title";
JS_MESSAGE["data.altitude.empty"] = "Please enter altitude.";
JS_MESSAGE["common.apply"] = "Apply";
JS_MESSAGE["data.group.name.empty"] = "Please enter the data group name.";
JS_MESSAGE["data.registrant"] = "Registrant";
JS_MESSAGE["common.user"] = "User";
JS_MESSAGE["user.password.upper.invalid"] = "The number of uppercase letters is inappropriate for the password policy.";
JS_MESSAGE["data.status.unused"] = "Stop using";
JS_MESSAGE["upload.history.does.not.exist"] = "File upload history does not exist.";
JS_MESSAGE["check.value.required"] = "There is not selected item.";
JS_MESSAGE["upload.data.type.invalid"] = "The data type of uploading data is incorrect.";
JS_MESSAGE["common.group"] = "Group";
JS_MESSAGE["error.exit"] = "Leave this page.";
JS_MESSAGE["search.hundred.count"] = "100";
JS_MESSAGE["runtime.exception"] = "Error is ocuured under processing. Please use after for a while.";
JS_MESSAGE["map.control.full"] = "Full screen";
JS_MESSAGE["spatial.linear.line.of.sight"] = "Linear Line Of Sight Analysis";
JS_MESSAGE["common.bounding.box.center"] = "Bounding Box Center";
JS_MESSAGE["data.latitude.empty"] = "Please enter latitude.";
JS_MESSAGE["data.transform.save"] = "Save";
JS_MESSAGE["data.group.id.empty"] = "Please enter the data group name.";
JS_MESSAGE["user.password.continuous.char.invalid"] = "The number of consecutive characters is not suitable for the password policy.";
JS_MESSAGE["create"] = "It has been created.";
JS_MESSAGE["toolbar.origin"] = "Origin";
JS_MESSAGE["common.location"] = "Longitude/Latitude/Altitude";
JS_MESSAGE["spatial.crop.shape"] = "Crop Shape";
JS_MESSAGE["toolbar.rgb.color.table"] = "RGB color table";
JS_MESSAGE["toolbar.data.information.inquiry"] = "Info Inquiry";
JS_MESSAGE["upload.data.list.page.title"] = "Uploading Data List | OPEN INDOOR MAP";
JS_MESSAGE["spatial.number.of.line"] = "Number Of Line (number)";
JS_MESSAGE["common.observer.position"] = "Observer Position";
JS_MESSAGE["user.insert"] = "Registerd the User.";
JS_MESSAGE["toolbar.rotate.camera.left"] = "Rotate camera left";
JS_MESSAGE["upload.file.delete.confirm"] = "Are you sure you want to delete all files in [File Uploading]?";
JS_MESSAGE["common.show"] = "Show";
JS_MESSAGE["toolbar.zoom.in"] = "Zoom in";
JS_MESSAGE["converter.usf.unit1cm"] = "1 cm";
JS_MESSAGE["upload.upload"] = "Upload";
JS_MESSAGE["spatial.low"] = "Low";
JS_MESSAGE["iot.occupancy.legend.grade"] = "Grade";
JS_MESSAGE["converter.usf.unit10cm"] = "10 cm";
JS_MESSAGE["commingsoon"] = "Comming Soon.";
JS_MESSAGE["check.id.duplication"] = "Please check ID duplication.";
JS_MESSAGE["error.contact.administrator"] = "If it occurs for a long time, please contact the administrator.";
JS_MESSAGE["converter.view.axis"] = "Axis";
JS_MESSAGE["common.type"] = "Type";
JS_MESSAGE["insert"] = "It has been registered.";
JS_MESSAGE["common.heading.pitch.roll"] = "heading/pitch/roll";
JS_MESSAGE["common.height.reference.relative"] = "Relative To Ground";
JS_MESSAGE["common.first"] = "First";
JS_MESSAGE["common.number"] = "Number";
JS_MESSAGE["data.group.sharing.status"] = "Status by data sharing type";
JS_MESSAGE["data.group.available"] = "Available";
JS_MESSAGE["unknown.exception"] = "Error is occured in server. Please use after for a while.";
JS_MESSAGE["password.not.match.new"] = "It dose not match the new password.";
JS_MESSAGE["data.group.map.summary"] = "Data Group List";
JS_MESSAGE["converter.view.z.axis"] = "Z Axis";
JS_MESSAGE["proceed.confirm"] = "Do you want to continue?";
JS_MESSAGE["user.input.invalid"] = "Required input value is not valid.";
JS_MESSAGE["common.more"] = "More";
JS_MESSAGE["data.group.key.enable"] = "The data group key available.";
JS_MESSAGE["data.file.empty"] = "Please attach a file.";
JS_MESSAGE["button.dobule.click"] = "Proceeding";
JS_MESSAGE["data.group.basic"] = "Basic";
JS_MESSAGE["converter.list.tab.menu"] = "Upload Data Conversion List";
JS_MESSAGE["data.group.user.id"] = "User ID";
JS_MESSAGE["common.information"] = "Information";
JS_MESSAGE["user"] = "User";
JS_MESSAGE["converter.data.group.sharing"] = "Sharing type";
JS_MESSAGE["account"] = "Account";
JS_MESSAGE["data.sharing.empty"] = "Please enter the sharing type.";
JS_MESSAGE["Altitude"] = "effective range : 300000";
