buildscript {
    dependencies {
        classpath files('build/classes/java/main', 'bin/main')
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.9.2"
    id 'project-report'
    id 'war'
}

war {
    enabled = true
}

task runWithJavaExec(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = 'io.openindoormap.utils.MessageUtil'
}

tasks.named('processResources') {
    doLast {
        runWithJavaExec.jvmArgs('-Dfile.encoding=utf-8');
        runWithJavaExec.exec()
        def inDir = "${projectDir}/src/main/resources/messages", outDir = "${projectDir}/src/main/resources/static/js"
        logger.quiet("Generating all documentation... ${inDir} => ${outDir} = makeConfig")
    }
}

dependencies {
    implementation project(':OIM-common')

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.2'
    implementation 'org.springframework.security:spring-security-core'

    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.4.1'

    implementation 'org.apache.commons:commons-compress:1.18'

    implementation 'org.modelmapper:modelmapper:2.3.6'

    // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
    implementation 'com.jayway.jsonpath:json-path:2.6.0'

    // https://mvnrepository.com/artifact/org.bgee.log4jdbc-log4j2/log4jdbc-log4j2-jdbc4.1
    implementation group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'

    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.postgresql:postgresql:42.2.14'

    implementation 'io.springfox:springfox-swagger2:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    //providedRuntime 'org.apache.tomcat.embed:tomcat-embed-jasper'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.12'
    implementation group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.13'
    implementation group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.12'

    //
    implementation fileTree(dir:'libs', include:['*.jar'])

}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
    ignoreFailures = true
    exclude '**/*'
}

asciidoctor {
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}

task copyDocument(type: Copy) {
    println " @@@@@ copyDocument execute @@@@@ "
    dependsOn asciidoctor
    from file("build/asciidoc/html5/")
    into file("src/main/resources/static/docs")
}

build {
    dependsOn copyDocument
}

task wrapper(type: Wrapper) {
    gradleVersion = '6.5'
}
